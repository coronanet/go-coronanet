# go-coronanet - Coronavirus social distancing network
# Copyright (c) 2020 Péter Szilágyi. All rights reserved.

openapi: 3.0.1

info:
  title: Corona Network
  description: |
    Restful API for the Corona Network decentralized social network.

    *The Corona Network API is not a globally accessible service, rather a server running locally on your device. The base URL is not a publicly routed domain, but rather a local one existing only on your device (and even on your device only within a process running [go-coronanet](https://github.com/coronanet/go-coronanet)).*
  version: 0.0.3

externalDocs:
  description: Corona Network on GitHub
  url: https://github.com/coronanet

servers:
  - url: https://corona-network/

tags:
  - name: Gateway
    description: Manage the Corona Network P2P gateway
  - name: Profile
    description: Manage the local Corona Network profile
  - name: Contacts
    description: Manage your contact list in the Corona Network
  - name: CDN
    description: Immutable objects infinitely cacheable

paths:
  /gateway:
    get:
      summary: Retrieves the current status of the Corona Network gateway
      tags:
        - Gateway
      responses:
        200:
          description: Current status of the gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Flag whether the gateway is actively attempting to maintain connectivity to the Corona Network. A `true` value does not mean that currently there is a live connection, only that the system will eventually establish one.
                  connected:
                    type: boolean
                    description: Flag whether the gateway has an active connection to the Corona Network.
                  bandwidth:
                    type: object
                    description: Network bandwidth used by the node.
                    properties:
                      ingress:
                        type: number
                        description: Number of bytes downloaded since the gateway was enabled.
                      egress:
                        type: number
                        description: Number of bytes uploaded since the gateway was enabled.
    put:
      summary: Requests the gateway to connect to the Corona Network
      tags:
        - Gateway
      responses:
        403:
          description: Cannot join the Corona Network without a local user
        200:
          description: Network connection will be established async and actively maintained
    delete:
      summary: Requests the gateway to disconnect from the Corona Network
      tags:
        - Gateway
      responses:
        200:
          description: Network connection torn down

  /profile:
    post:
      summary: Create a new local user
      tags:
        - Profile
      responses:
        409:
          description: Local user already exists
        200:
          description: Successfuly created new user
    get:
      summary: Retrieves the local user's profile
      tags:
        - Profile
      responses:
        404:
          description: Local user doesn't exist
        200:
          $ref: '#/components/responses/Profile'
    put:
      summary: Updates the local user's profile
      tags:
        - Profile
      requestBody:
        description: New profile of the current user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        400:
          description: Provided profile is invalid
        403:
          description: Local user doesn't exist
        200:
          description: User profile updated
    delete:
      summary: Deletes the local user (nukes all data)
      tags:
        - Profile
      responses:
        200:
          description: Successfully deleted user

  /profile/avatar:
    get:
      summary: Retrieves the local user's profile picture
      tags:
        - Profile
      responses:
        403:
          description: Local user doesn't exist
        404:
          description: Local user doesn't have a profile picture
        302:
          $ref: '#/components/responses/Avatar'
    put:
      summary: Updates the local user's profile picture
      tags:
        - Profile
      requestBody:
        $ref: '#/components/requestBodies/Avatar'
      responses:
        403:
          description: Local user doesn't exist
        200:
          description: User profile picture updated
    delete:
      summary: Deletes the local user's profile picture
      tags:
        - Profile
      responses:
        403:
          description: Local user doesn't exist
        200:
          description: Successfully deleted the local user's profile picture

  /pairing:
    post:
      summary: Creates a pairing session for contact establishment
      tags:
        - Contacts
      responses:
        403:
          description: Cannot pair while offline
        200:
          description: Successfully created pairing session
          content:
            application/json:
              schema:
                type: string
                description: Temporary pairing secret
    get:
      summary: Waits for a pairing session to complete
      tags:
        - Contacts
      responses:
        403:
          description: No pairing session in progress
        409:
          description: Remote contact already paired
        200:
          description: Successfully established session
          content:
            application/json:
              schema:
                type: string
                description: Contact ID of the paired user
    put:
      summary: Joins a pairing session for contact establishment
      tags:
        - Contacts
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: string
              description: Temporary pairing secret
      responses:
        400:
          description: Provided pairing secret is invalid
        403:
          description: Cannot pair while offline
        409:
          description: Remote contact already paired
        200:
          description: Successfully established session
          content:
            application/json:
              schema:
                type: string
                description: Contact ID of the paired user

  /contacts:
    get:
      summary: List all contacts of the local user
      tags:
        - Contacts
      responses:
        403:
          description: Local user doesn't exist
        200:
          description: Returns a list of contact IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /contacts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Globally unique identifier of contact
        schema:
          type: string
    delete:
      summary: Removes an existing contact
      tags:
        - Contacts
      responses:
        403:
          description: Remote contact doesn't exist
        200:
          description: Successfully deleted user

  /contacts/{id}/profile:
    parameters:
      - name: id
        in: path
        required: true
        description: Globally unique identifier of contact
        schema:
          type: string
    get:
      summary: Retrieves a remote contact's profile
      tags:
        - Contacts
      responses:
        404:
          description: Remote contact doesn't exist
        200:
          $ref: '#/components/responses/Profile'
    put:
      summary: Overrides the remote contact's profile
      tags:
        - Contacts
      requestBody:
        description: New profile of the current user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        400:
          description: Provided profile is invalid
        403:
          description: Remote contact doesn't exist
        200:
          description: Contact profile updated

  /contacts/{id}/profile/avatar:
    parameters:
      - name: id
        in: path
        required: true
        description: Globally unique identifier of contact
        schema:
          type: string
    get:
      summary: Retrieves a remote contact's profile picture
      tags:
        - Contacts
      responses:
        403:
          description: Local user doesn't exist
        404:
          description: Remote contact is unknown
        302:
          $ref: '#/components/responses/Avatar'

  /cdn/images/{sha3}:
    get:
      summary: Retrieves an immutable image
      tags:
        - CDN
      parameters:
        - name: sha3
          in: path
          required: true
          description: SHA3 hash of the image (64 hex digit)
          schema:
            type: string
      responses:
        400:
          description: Image hash invalid
        404:
          description: Image unknown or unavailable
        200:
          description: Image content
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

components:
  schemas:
    Profile:
      type: object
      properties:
        name:
          type: string
          description: Full name of the user

  requestBodies:
    Avatar:
      description: New profile picture for the user
      required: true
      content:
        image/jpeg:
          schema:
            type: string
            format: binary

  responses:
    Profile:
      description: Returns requested profile infos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'

    Avatar:
      description: Redirect to immutable image
      content:
        image/jpeg:
          schema:
            type: string
            format: binary
